#!/usr/bin/env python3
from listavulnerabilidades import ListaVulnerabilidades
import parser
import param
import verbose
from progressbar import ProgressBar
from report import Report

SI = "s"
NO = "n"

def showVulnerabilities(vulnerabilities):
    for index, vuln in enumerate(vulnerabilities):
        print("{} {}".format(index, vuln.name))

def linkVulnerabilitiesSelection(vulnerabilities):
    while(True):
        entry = input("Ingrese numero de vulnerabilidades a unir sepadas por comas:")
        vulnsNums = entry.split(",")
        error = False
        for index, vulnNum in enumerate(vulnsNums):
            vulnsNums[index] = int(vulnNum)
            if (vulnsNums[index] >= len(vulnerabilities)):
                print("La entrada {} no es valida".format(entry))
                error = True
                break
        
        if (error):
            continue

        name = input("Ingrese nuevo nombre para la vulnerabilidad:")
        mainVulnNum = min(vulnsNums)
        for vulnNum in vulnsNums:
            if (vulnNum == mainVulnNum):
                continue
            vulnerabilities[mainVulnNum].link(vulnerabilities[vulnNum], name)
            del vulnerabilities[vulnNum]
        print("----------------------------------")
        break
            
def linkVulnerabilitiesMenu(vulnerabilities):
    while(True):
        showVulnerabilities(vulnerabilities)
        entrada = input("Desea unir alguna vulnerabilidad? [S/N]: ")
        if (entrada.lower() == SI):
            linkVulnerabilitiesSelection(vulnerabilities)
        elif (entrada.lower() == NO):
            break
        else:
            print("El caracter ingresado no es valido")
            print("----------------------------------")

def changeName(vulnerabilities):
    while(True):
        entry = int(input("Ingrese numero de vulnerabilidad a cambiar el nombre:"))
        if (entry >= len(vulnerabilities)):
            print("La entrada {} no es valida".format(entry))
            continue
        
        print("{} {}".format(entry, vulnerabilities[entry].name))
        name = input("Ingrese nuevo nombre para la vulnerabilidad:")
        vulnerabilities[entry].changeName(name)
        print("----------------------------------")
        break

def changeNameMenu(vulnerabilities):
    while(True):
        showVulnerabilities(vulnerabilities)
        entrada = input("Desea cambiar el nombre de alguna vulnerabilidad? [S/N]: ")
        if (entrada.lower() == SI):
            changeName(vulnerabilities)
        elif (entrada.lower() == NO):
            break
        else:
            print("El caracter ingresado no es valido")
            print("----------------------------------")


def main():
    args = param.arguments()

    csvParser = parser.CsvParser(args.file)

    vulnerabilidades = ListaVulnerabilidades()

    print('[+] Loading report...')
    vulnerabilidadesParseadas = csvParser.getAllVuln()
    print('')
    print('[+] ' + str(len(vulnerabilidadesParseadas)) + ' vulnerabilities.')
    print('')

    print('[+] Translate in progress...')
    progressBar = ProgressBar(len(vulnerabilidadesParseadas))
    progressBar.mostrar()

    for vulnerabilidad in vulnerabilidadesParseadas:
        vulnerabilidades.agregar(vulnerabilidad, ['None','Info'], args.language)
        progressBar.siguiente()
        if args.verbose:
            vulnerabilidad.mostrar()

    vulnerabilidades.sort(reverse=True)
    changeNameMenu(vulnerabilidades)
    linkVulnerabilitiesMenu(vulnerabilidades)
    print('')
    if(args.excel):
        Report.toExcel(vulnerabilidades, args.output, args.language)
        print('[+] Excel done')

    if(args.word):
        Report.toWord(vulnerabilidades, args.output, args.language, args.client, args.nmap)
        print('[+] Word done')

    print('')
    print('[+] Reports complete')

main()
